package com.oop.examples;

public enum ClassTypes {
    LOCAL("ЛОКАЛЬНЫЙ КЛАСС.\n" +
            "        1. Объявляется в рамках одного метода.\n" +
            "        2. Не может быть статическим.\n" +
            "        3. Может быть абстрактным.\n" +
            "        4. Объект локального класса не может создаваться за пределами метода или блока, в котором его объявили.\n" +
            "        5. В локальных классах нельзя объявлять статические инициализаторы (блоки инициализации) или интерфейсы.\n" +
            "           Но у локальных классов могут быть статические члены при условии, что они постоянные переменные (static final)."),
    ANONYMOUS("АНОМИМНЫЙ КЛАСС.\n" +
            "       0. Создаётся один раз в момент инициализации объекта.\n" +
            "       1. Не имеет имени.\n" +
            "       2. Не имеет явного конструктора(можно вызвать конструктор суперкласса!).\n" +
            "       3. Не доступен классам извне,за исключением\n" +
            "           неявного обращения посредством объектной ссылки\n" +
            "           на суперкласс или интерфейс.\n" +
            "       4. НИКОГДА не могут быть СТАТИЧЕСКИМИ или АБСТРАКТНЫМИ.\n" +
            "       5. Не может содержать статические переменные и методы.\n" +
            "       6. В конце ставится  ;  [точка с запятой].\n" +
            "          Одновременно объявляется класс (посредством фигурных скобок) и\n" +
            "          создаётся его объект с помощью   ();\n" +
            "       7. Каждый анонимный класс объявляется внутри выражения.\n" +
            "       8. Имеет доступ КО ВСЕМ ПОЛЯМ ВНЕШНЕГО КЛАССА (ДАЖЕ PRIVATE !!!!!)\n" +
            "       9. Может реализовывать только один интерфейс либо наследовать один класс."),
    LAMBDA(getDefaultDescription()),
    ABSTRACT(getDefaultDescription()),
    CLASS(getDefaultDescription()),
    INNER(getDefaultDescription()),
    NESTED(getDefaultDescription());

    private final String description;

    ClassTypes(String description) {
        this.description = description;
    }

    public String getDescription() {
        return "\nClass type description:\n'" + description + "'";
    }

    private static String getDefaultDescription() {
        return "no description!";
    }
}
